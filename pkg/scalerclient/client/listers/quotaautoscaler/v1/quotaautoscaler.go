/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/ing-bank/quota-scaler/pkg/scalerclient/apis/quotaautoscaler/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// QuotaAutoscalerLister helps list QuotaAutoscalers.
// All objects returned here must be treated as read-only.
type QuotaAutoscalerLister interface {
	// List lists all QuotaAutoscalers in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.QuotaAutoscaler, err error)
	// QuotaAutoscalers returns an object that can list and get QuotaAutoscalers.
	QuotaAutoscalers(namespace string) QuotaAutoscalerNamespaceLister
	QuotaAutoscalerListerExpansion
}

// quotaAutoscalerLister implements the QuotaAutoscalerLister interface.
type quotaAutoscalerLister struct {
	indexer cache.Indexer
}

// NewQuotaAutoscalerLister returns a new QuotaAutoscalerLister.
func NewQuotaAutoscalerLister(indexer cache.Indexer) QuotaAutoscalerLister {
	return &quotaAutoscalerLister{indexer: indexer}
}

// List lists all QuotaAutoscalers in the indexer.
func (s *quotaAutoscalerLister) List(selector labels.Selector) (ret []*v1.QuotaAutoscaler, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.QuotaAutoscaler))
	})
	return ret, err
}

// QuotaAutoscalers returns an object that can list and get QuotaAutoscalers.
func (s *quotaAutoscalerLister) QuotaAutoscalers(namespace string) QuotaAutoscalerNamespaceLister {
	return quotaAutoscalerNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// QuotaAutoscalerNamespaceLister helps list and get QuotaAutoscalers.
// All objects returned here must be treated as read-only.
type QuotaAutoscalerNamespaceLister interface {
	// List lists all QuotaAutoscalers in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.QuotaAutoscaler, err error)
	// Get retrieves the QuotaAutoscaler from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.QuotaAutoscaler, error)
	QuotaAutoscalerNamespaceListerExpansion
}

// quotaAutoscalerNamespaceLister implements the QuotaAutoscalerNamespaceLister
// interface.
type quotaAutoscalerNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all QuotaAutoscalers in the indexer for a given namespace.
func (s quotaAutoscalerNamespaceLister) List(selector labels.Selector) (ret []*v1.QuotaAutoscaler, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.QuotaAutoscaler))
	})
	return ret, err
}

// Get retrieves the QuotaAutoscaler from the indexer for a given namespace and name.
func (s quotaAutoscalerNamespaceLister) Get(name string) (*v1.QuotaAutoscaler, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("quotaautoscaler"), name)
	}
	return obj.(*v1.QuotaAutoscaler), nil
}
